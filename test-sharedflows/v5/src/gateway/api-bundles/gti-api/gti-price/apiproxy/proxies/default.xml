<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
    <Description/>
    <FaultRules>
        <FaultRule name="ErrorHandling">
            <Step>
                <Name>FC-FaultHandling</Name>
                <Condition>(brandApiError != "true")</Condition>
            </Step>
        </FaultRule>
    </FaultRules>
    <DefaultFaultRule name="default-faultrule">
		<Step>
            <Name>AM-SetHeaderBrandApiError</Name>
        </Step>
        <Step>
            <Name>ML-LogProxyError</Name>
        </Step>
        <Step>
            <Name>RF-GenericFaultHandler</Name>
        </Step>
        <AlwaysEnforce>true</AlwaysEnforce>
    </DefaultFaultRule>

    <PreFlow name="PreFlow">
        <Request>
			<Step>
                <Name>FC-CostaHeaderValidation</Name>
            </Step>
            <Step>
                <Name>KVM-RetriveConfig</Name>
            </Step>
            <Step>
                <Name>FC-PreFlowSteps</Name>
            </Step>
            <Step>
                <Name>JS-DynamicQuota</Name>
                <Condition>(quotaEnabled == "true")</Condition>
            </Step>
            <Step>
                <Name>KVM-RetrieveMockParameter</Name>
                <Condition>(verifyapikey.VerifyAPIKey.enablemock = "true")</Condition>
            </Step>
            <Step>
                <Name>JS-SetMockParameters</Name>
                <Condition>(verifyapikey.VerifyAPIKey.enablemock = "true")</Condition>
            </Step>
			<Step>
                <Name>KVM-RetrieveCostaError</Name>
            </Step>
        </Request>
        <Response/>
    </PreFlow>

    <PostFlow name="PostFlow">
        <Request/>
        <Response/>
    </PostFlow>
	<PostClientFlow>
        <Request/>
        <Response>
            <Step>
                <Name>ML-LogTargetReqAndResp</Name>
            </Step>
        </Response>
    </PostClientFlow>
    <Flows>
        <Flow name="Price By Cruise Id">
            <Description/>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/cruise/{cruiseId}") and (request.verb = "GET")</Condition>
        </Flow>

        <Flow name="Price By Itinerary Id">
            <Description/>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/itinerary/{itineraryId}") and (request.verb = "GET")</Condition>
        </Flow>

    </Flows>

    <HTTPProxyConnection>
        <BasePath>/v2/costa/price</BasePath>
        <Properties/>
        <VirtualHost>default</VirtualHost>
    </HTTPProxyConnection>
    
    <RouteRule name="mock">
        <Condition>(verifyapikey.VerifyAPIKey.enablemock ="true" and request.queryparam.serviceName != null and request.queryparam.responseType != null)</Condition>
        <TargetEndpoint>mock</TargetEndpoint>
    </RouteRule>
    
    <RouteRule name="priceByItineraryId">
        <Condition>(proxy.pathsuffix MatchesPath "/itinerary/{itineraryId}") and (request.verb = "GET")</Condition>
        <TargetEndpoint>pricebyitineraryid</TargetEndpoint>
    </RouteRule>
    
    <RouteRule name="priceByCruiseId">
        <Condition>(proxy.pathsuffix MatchesPath "/cruise/{cruiseId}") and (request.verb = "GET")</Condition>
        <TargetEndpoint>pricebycruiseid</TargetEndpoint>
    </RouteRule>
</ProxyEndpoint>